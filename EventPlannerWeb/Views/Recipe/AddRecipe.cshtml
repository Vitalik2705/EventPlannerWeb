@model EventPlannerWeb.DTO.RecipeDTO

@{
    ViewData["Title"] = "Add Recipe";
}

<html>
<head>
    <title>@ViewData["Title"]</title>
    <style>
        body {
            margin-top: 150px;
            padding: 0;
            background-color: #f7f7f7;
        }

        .container {
            width: 80%;
            margin: 30px auto;
        }

        .card {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-bottom: 20px;
        }

            .card h1 {
                color: #333;
                font-size: 24px;
                margin-bottom: 10px;
            }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
            color: #333;
        }

        input[type="text"],
        input[type="number"],
        textarea {
            width: 100%;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ccc;
            box-sizing: border-box;
        }

        textarea {
            height: 100px;
        }

        .btn-primary {
            background-color: #8B92D0;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 10px 20px;
            cursor: pointer;
        }

            .btn-primary:hover {
                background-color: #8B92D0;
            }

        .back-to-list {
            display: inline-block;
            margin-top: 20px;
            padding: 10px 15px;
            background-color: #8B92D0;
            color: #fff;
            border-radius: 4px;
            text-decoration: none;
        }

            .back-to-list:hover {
                background-color: #8B92D0;
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="card">
            <h1>Додати рецепт</h1>
            <form method="post" asp-action="AddRecipe" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="name">Назва:</label>
                    <input type="text" id="name" name="Name" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="calories">Калорійність:</label>
                    <input type="number" id="calories" name="Calories" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="cookingTime">Час приготування:</label>
                    <input type="number" id="cookingTime" name="CookingTime" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="price">Вартість:</label>
                    <input type="number" id="price" name="Price" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="description">Опис приготування:</label>
                    <textarea id="description" name="Description" class="form-control" required></textarea>
                </div>
                <div class="form-group">
                    <label for="ingredients">Інгредієнти:</label>
                    <select id="ingredients" name="selectedIngredients" multiple class="form-control" required>
                        @foreach (var ingredient in ViewBag.Ingredients)
                        {
                            <option value="@ingredient.Value">@ingredient.Text</option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <button type="button" value="Save" class="btn btn-primary" onclick="addRecipe()">Додати</button>
                </div>
            </form>
            <a href="@Url.Action("RecipeList", "Recipe")" class="back-to-list">Назад до списку</a>
        </div>
    </div>
    <script>
        async function addRecipe() {
            //const recipeId = document.getElementById("recipeId").value;
            const name = document.getElementById("name").value;
            const price = document.getElementById("price").value;
            const calories = document.getElementById("calories").value;
            const cookingTime = document.getElementById("cookingTime").value;
            const description = document.getElementById("description").value;

            const data = {
                Recipe: {
                    Name: name,
                    Price: price,
                    Calories: calories,
                    CookingTime: cookingTime,
                    Description: description
                },
                IngredientsAmount: [30],
                Ingredients: ["Морква"]
            };

            try {
                const response = await fetch('/api/Recipe', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    // Обробка успішної відповіді
                    alert('Рецепт успішно оновлено!');
                } else {
                    // Обробка помилки
                    alert('Помилка при оновленні рецепту');
                }
            } catch (error) {
                console.error('Виникла помилка:', error);
                alert('Виникла помилка при відправці запиту');
            }
        }
    </script>
</body>
</html>