@model List<EventPlannerWeb.DTO.RecipeDTO>

@{
    ViewData["Title"] = "Recipe List";
}

<html>
<head>
    <title>@ViewData["Title"]</title>
    <style>
        .recipe-list-page {
            margin-top: 150px;
            margin-left: 300px;
        }

        .recipe-list-header-part {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
        }

        .recipe-list-header {
            font-size: 30px;
            margin-bottom: 20px;
        }

        /* Recipe search input field */
        .recipe-search {
            width: 300px; /* Adjust width as needed */
            height: 40px;
            padding: 8px 12px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin-right: 10px; /* Adjust spacing */
        }

        /* Search button */
        .button-search {
            height: 40px;
            padding: 0 20px;
            font-size: 16px;
            color: #fff;
            background-color: #8B92D0; /* Adjust color */
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease; /* Smooth transition */
        }

            .button-search:hover {
                background-color: #8B92D0; /* Darker color on hover */
            }

        .add-recipe {
            width: 120px;
            height: 55px;
            background-color: white;
            font-size: 17px;
            color: #8B92D0;
            border-radius: 10px;
            cursor: pointer;
            margin-right: 320px;
        }

        .recipe-list-element {
            width: 900px;
            height: 50px;
            background-color: gainsboro;
            display: flex;
            justify-content: space-between;
            cursor: pointer;
            margin-top: 15px;
        }

        .recipe-name {
            cursor: pointer;
            padding-left: 20px;
            padding-top: 15px;
            font-size: 20px;
        }

        .recipe-info {
            display: flex;
            flex-direction: row;
            margin-right: 100px;
        }

        .recipe-info-text {
            cursor: pointer;
            padding-left: 60px;
            padding-top: 15px;
            font-size: 20px;
        }

        .edit-button {
            background-color: #8B92D0; /* Green */
            border: none;
            color: white;
            padding: 10px 24px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 5px;
        }

        .delete-button {
            background-color: #8B92D0; /* Red */
            border: none;
            color: white;
            padding: 10px 24px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 5px;
        }

        .field-naming {
            display: flex;
            justify-content: flex-start;
            margin-top: 15px;
            margin-bottom: 5px;
            font-weight: bold;
            font-size: 20px;
            padding: 0px; /* Add padding for better spacing */
        }

        .name {
            margin-left: 50px;
        }

        .time {
            margin-left: 110px;
        }

        .price {
            margin-left: 80px;
        }

        .calories {
            margin-left: 85px;
        }
    </style>
</head>
<body>
    <div class="recipe-list-page">
        
        <div class="recipe-list-header">Список рецептів</div>
        <div class="recipe-list-header-part">
            <div class="search-part">
                <input type="text" id="recipe-search-input" class="recipe-search" placeholder="Пошук за назвою рецепту">
                <button class="button-search" onclick="filterAndSortRecipes()">Пошук</button>
            </div>
            <button class="add-recipe">Додати рецепт</button>
        </div>
        <div class="field-naming">
            <div class="name">Назва</div>
            <div class="time">Час</div>
            <div class="price">Ціна</div>
            <div class="calories">Калорії</div>
        </div>
        <div class="recipe-list" id="recipe-list-container">
        @foreach (var recipe in Model)
        {
        <div class="recipe-list-element">
            <div class="recipe-name">@recipe.Recipe.Name</div>
            <div class="recipe-info" data-id="@recipe.Recipe.RecipeId" onclick="openRecipeDetails(this)">
                <div class="recipe-info-text"> @recipe.Recipe.CookingTime хв</div>
                <div class="recipe-info-text"> @recipe.Recipe.Price грн</div>
                <div class="recipe-info-text"> @recipe.Recipe.Calories ккал</div>
            </div>
            <div>
                <button class="edit-button" onclick="editRecipe(@recipe.Recipe.RecipeId)">Редагувати</button>
                <button class="delete-button" onclick="deleteRecipe(@recipe.Recipe.RecipeId)">Видалити</button>
            </div>
        </div>
        }
        </div>
    </div>

    <script>
        function editRecipe(recipeId) {
        window.location.href = 'Recipe/UpdateRecipe/' + recipeId; 
        }

        function deleteRecipe(recipeId) {
        if (confirm('Ви впевнені, що хочете видалити цей рецепт?')) {
            fetch('/api/Recipe/' + recipeId, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Не вдалося видалити рецепт');
                }
                window.location.reload();
            })
            .catch(error => {
                console.error('Помилка:', error);
            });
        }
        }

        function filterAndSortRecipes() {
            var searchQuery = document.getElementById('recipe-search-input').value.toLowerCase();
            var recipeListContainer = document.getElementById('recipe-list-container');
            var recipeListItems = recipeListContainer.getElementsByClassName('recipe-list-element');

            // Loop through each recipe list item
            Array.from(recipeListItems).forEach(function (item) {
                var recipeName = item.getElementsByClassName('recipe-name')[0].innerText.toLowerCase();

                // If the recipe name contains the search query, show the item; otherwise, hide it
                if (recipeName.includes(searchQuery)) {
                    item.style.display = 'flex';
                } else {
                    item.style.display = 'none';
                }
            });
        }

        // Add event listener to the search input field
        document.getElementById('recipe-search-input').addEventListener('input', filterAndSortRecipes);
        
        function openRecipeDetails(element) {
            var recipeId = element.getAttribute('data-id');
            window.location.href = '/api/Recipe/' + recipeId;
        }
        // Function to handle the click event on the "Додати рецепт" button
        function openAddRecipePage() {
            // Redirect to the AddRecipe page
            window.location.href = '/api/Recipe/AddRecipe'; // Update the URL according to your routing
        }

        // Add event listener to the "Додати рецепт" button
        document.querySelector('.add-recipe').addEventListener('click', openAddRecipePage);
    </script>
</body>
</html>